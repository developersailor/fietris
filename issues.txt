Fitetris - Flutter/Flame YapÄ±lacak Ä°ÅŸler Listesi
Bu liste, Fitetris oyununun Flutter ve Flame oyun motoru kullanÄ±larak geliÅŸtirilmesi iÃ§in gereken gÃ¶revleri iÃ§erir. Oyunun temel konsepti, dÃ¼ÅŸen Tetris benzeri bloklarÄ± yerleÅŸtirirken aynÄ± zamanda zemindeki aynÄ± renkli blok gruplarÄ±na dokunarak patlatmaya dayanÄ±r.
ğŸš€ Temel Kurulum ve AltyapÄ± (Flutter/Flame)
* [âœ…] [Core] Flutter Projesi OluÅŸturma: Yeni bir Flutter projesi baÅŸlatma.
* [âœ…] [Core] Flame Entegrasyonu: flame paketini projeye ekleme ve temel FlameGame sÄ±nÄ±fÄ±nÄ± oluÅŸturma.
* [âœ…] [Core] Oyun Sahnesi Kurulumu: Ana oyun mantÄ±ÄŸÄ±nÄ± yÃ¶netecek bir FitetrisGame (veya benzeri) FlameGame sÄ±nÄ±fÄ± oluÅŸturma.
* [âœ…] [Core] Temel Oyun DÃ¶ngÃ¼sÃ¼: update ve render metotlarÄ±nÄ±n temel yapÄ±sÄ±nÄ± kurma.
* [âœ…] [Grid] Grid Veri YapÄ±sÄ±: Oyun alanÄ±nÄ± (gridData) temsil edecek bir 2D liste veya Ã¶zel sÄ±nÄ±f oluÅŸturma. Her hÃ¼crenin rengini ve durumunu (boÅŸ, dolu, dÃ¼ÅŸen blok parÃ§asÄ±) tutmalÄ±.
* [âœ…] [Grid] GÃ¶rsel Grid Ã‡izimi: Oyun alanÄ±nÄ±n sÄ±nÄ±rlarÄ±nÄ± ve hÃ¼cre Ã§izgilerini FlameGame iÃ§inde Ã§izme (SpriteComponent veya ShapeComponent kullanarak).
ğŸ§± Blok Mekanikleri (Flame Components)
* [âœ…] [Gameplay] Blok TanÄ±mlarÄ±: Tetromino benzeri ÅŸekilleri (klasik ve/veya Ã¶zel "fit" ÅŸekilleri) ve renkleri tanÄ±mlayan enum veya sÄ±nÄ±flar oluÅŸturma.
* [âœ…] [Gameplay] Blok Component'i: DÃ¼ÅŸen bloÄŸu temsil edecek bir PositionComponent (veya daha spesifik bir BlockComponent) oluÅŸturma. Bu component, bloÄŸun ÅŸeklini, rengini ve parÃ§alarÄ±nÄ± (kÃ¼Ã§Ã¼k kare SpriteComponent'ler) iÃ§ermeli.
* [ ] [Gameplay] Blok OluÅŸturma (spawnNewBlock): Rastgele bir blok tÃ¼rÃ¼nÃ¼ ve rengini seÃ§ip, baÅŸlangÄ±Ã§ pozisyonunda BlockComponent olarak oyun sahnesine ekleme.
* [ ] [Gameplay] Otomatik Blok DÃ¼ÅŸme: BlockComponent'in update metodunda veya FitetrisGame'in update'inde bloÄŸu dÃ¼zenli aralÄ±klarla aÅŸaÄŸÄ± hareket ettirme (MoveEffect veya manuel pozisyon gÃ¼ncelleme).
* [ ] [Gameplay] Ã‡arpÄ±ÅŸma AlgÄ±lama (checkCollision): DÃ¼ÅŸen bloÄŸun oyun alanÄ± sÄ±nÄ±rlarÄ±na ve yerleÅŸmiÅŸ bloklara (GridData iÃ§indeki) Ã§arpÄ±p Ã§arpmadÄ±ÄŸÄ±nÄ± kontrol etme.
* [ ] [Gameplay] Blok YerleÅŸimi (settleBlock): DÃ¼ÅŸemeyen BlockComponent'in parÃ§alarÄ±nÄ± GridData'ya kalÄ±cÄ± olarak iÅŸleme, dÃ¼ÅŸen BlockComponent'i sahneden kaldÄ±rma. YerleÅŸen her kare iÃ§in ayrÄ± bir SpriteComponent oluÅŸturup sahneye ekleme.
* [ ] [Gameplay] Sonraki Blok GÃ¶stergesi (Veri): Bir sonraki dÃ¼ÅŸecek bloÄŸun tÃ¼rÃ¼nÃ¼ ve rengini tutan bir deÄŸiÅŸken (nextBlockType).
ğŸ‘† Oyuncu EtkileÅŸimi (Flame Input / Flutter Gestures)
* [ ] [Input] Blok KontrolÃ¼ (Hareket): DÃ¼ÅŸen bloÄŸu saÄŸa/sola hareket ettirmek iÃ§in dokunmatik kontroller (ekranÄ±n sol/saÄŸ tarafÄ±na dokunma VEYA sÃ¼rÃ¼kleme) veya butonlar (ButtonComponent veya Flutter Overlay butonlarÄ±).
* [ ] [Input] Blok KontrolÃ¼ (DÃ¶ndÃ¼rme): Blok dÃ¶ndÃ¼rme mekanizmasÄ± iÃ§in dokunmatik kontrol (Ã¶rn. Ã§ift dokunma) veya buton. DÃ¶nÃ¼ÅŸ mantÄ±ÄŸÄ±nÄ±n Ã§arpÄ±ÅŸma kontrollerini iÃ§ermesi.
* [ ] [Input] Blok KontrolÃ¼ (HÄ±zlÄ± DÃ¼ÅŸÃ¼rme): BloÄŸu hÄ±zla aÅŸaÄŸÄ± indirmek iÃ§in dokunmatik kontrol (Ã¶rn. aÅŸaÄŸÄ± sÃ¼rÃ¼kleme) veya buton.
* [ ] [Input] Grid Dokunma AlgÄ±lama: Oyun alanÄ±ndaki yerleÅŸmiÅŸ karelere (SpriteComponent'lere) dokunmayÄ± algÄ±lama (TapCallbacks mixin'i kullanarak).
ğŸ’¥ Patlatma ve Zincirleme Reaksiyonlar
* [ ] [Gameplay] EÅŸleÅŸme Bulma (findMatches): Dokunulan kareyle aynÄ± renkteki, birbirine bitiÅŸik (yatay/dikey) 3 veya daha fazla kare grubunu bulma (BFS veya DFS algoritmasÄ±).
* [ ] [Gameplay] EÅŸleÅŸme Temizleme (clearMatches): Bulunan gruptaki kareleri GridData'dan kaldÄ±rma ve ilgili SpriteComponent'leri (isteÄŸe baÄŸlÄ± olarak animasyonlu bir Effect ile) sahneden kaldÄ±rma.
* [ ] [Gameplay] YerÃ§ekimi Uygulama (applyGravity): Temizlenen karelerin Ã¼zerindeki karelerin GridData'da ve gÃ¶rsel olarak (animasyonlu MoveEffect ile) aÅŸaÄŸÄ± dÃ¼ÅŸmesini saÄŸlama.
* [ ] [Gameplay] Kombo MantÄ±ÄŸÄ± (checkForCombos): YerÃ§ekimi sonrasÄ± otomatik olarak oluÅŸan yeni 3+ gruplarÄ±nÄ± algÄ±lama, clearMatches ve applyGravity'yi tekrar tetikleme. Ä°ÅŸlem sÄ±rasÄ±nda oyuncu girdisini geÃ§ici olarak engelleme (isProcessingMatches flag'i).
ğŸ’¯ Skorlama ve Oyun Durumu
* [ ] [Scoring] Temel Puanlama: Blok yerleÅŸince puan ekleme.
* [ ] [Scoring] Grup Patlatma PuanlarÄ±: PatlatÄ±lan grubun boyutuna (3'lÃ¼, 4'lÃ¼, 5+) gÃ¶re puan verme.
* [ ] [Scoring] Kombo PuanlarÄ±: Zincirleme reaksiyonlardaki her ek patlama iÃ§in artan Ã§arpan (comboMultiplier) uygulama ve puanÄ± buna gÃ¶re hesaplama.
* [ ] [Scoring] "Fit" Bonusu: settleBlock iÃ§inde, bloÄŸun indiÄŸi yerin etrafÄ±nda boÅŸluk kalmamasÄ±nÄ± kontrol etme ve bonus puan verme.
* [ ] [Scoring] SÄ±ra Tamamlama (Opsiyonel ama TanÄ±mda Var): Tamamlanan yatay sÄ±ralarÄ± algÄ±lama, temizleme, bonus puan ve zaman bonusu verme.
* [ ] [Game Logic] Zaman SayacÄ±: Geri sayÄ±m sayacÄ± (Timer veya update iÃ§inde dt kullanarak) uygulama (Ã¶rn. 90 saniye).
* [ ] [Game Logic] Oyun Sonu (Tepeye UlaÅŸma): Yeni blok spawn edilemiyorsa (spawnNewBlock iÃ§inde kontrol) veya yerleÅŸen bloklar en Ã¼st sÄ±raya ulaÅŸtÄ±ysa (settleBlock sonrasÄ± kontrol) oyunu bitirme.
* [ ] [Game Logic] Oyun Sonu (Zaman): Zaman sayacÄ± sÄ±fÄ±ra ulaÅŸtÄ±ÄŸÄ±nda oyunu bitirme.
* [ ] [Game Logic] Kazanma KoÅŸulu: SÃ¼re dolduÄŸunda veya oyun bittiÄŸinde hedef skora ulaÅŸÄ±lÄ±p ulaÅŸÄ±lmadÄ±ÄŸÄ±nÄ± kontrol etme.
* [ ] [Game Logic] Oyun Durumu YÃ¶netimi: Oyunun farklÄ± durumlarÄ±nÄ± (BaÅŸlangÄ±Ã§, OynanÄ±yor, DuraklatÄ±ldÄ±, Oyun Bitti - KazandÄ±/Kaybetti) yÃ¶netmek iÃ§in bir state machine veya enum kullanma.
âœ¨ UI, GÃ¶rsel ve Ses Efektleri
* [ ] [UI] Skor GÃ¶sterimi: Mevcut skoru ekranda gÃ¶sterme (Flame TextComponent veya Flutter Overlay kullanarak).
* [ ] [UI] Zaman GÃ¶stergesi: Kalan sÃ¼reyi ekranda gÃ¶sterme (Flame TextComponent veya Flutter Overlay).
* [ ] [UI] Sonraki Blok GÃ¶stergesi (GÃ¶rsel): nextBlockType verisine gÃ¶re sonraki bloÄŸun kÃ¼Ã§Ã¼k bir Ã¶nizlemesini ekranda gÃ¶sterme.
* [ ] [UI] Kombo GÃ¶stergesi: Aktif kombo Ã§arpanÄ±nÄ± (Ã¶rn. "Kombo x3!") ekranda gÃ¶sterme.
* [ ] [UI] "Fit Bonusu" Bildirimi: MÃ¼kemmel uyum saÄŸlandÄ±ÄŸÄ±nda gÃ¶rsel bir bildirim gÃ¶sterme.
* [ ] [UI] Kontrol ButonlarÄ± (Opsiyonel): EÄŸer dokunmatik alanlar yerine butonlar tercih edilirse, ButtonComponent veya Flutter Overlay ile D-Pad ve diÄŸer kontrol butonlarÄ±nÄ± oluÅŸturma.
* [ ] [UI] Game Over EkranÄ±: Oyun bittiÄŸinde skoru, kazanma/kaybetme durumunu gÃ¶steren ve yeniden baÅŸlatma seÃ§eneÄŸi sunan bir ekranÄ± Flutter Overlay olarak gÃ¶sterme.
* [ ] [UI] BaÅŸlat/Duraklat Butonu: Oyunu duraklatÄ±p devam ettirmek iÃ§in bir buton ekleme.
* [ ] [VFX] Patlama Efektleri: Kareler patladÄ±ÄŸÄ±nda parÃ§acÄ±k efektleri (ParticleSystemComponent) veya animasyonlar (SpriteAnimationComponent, ScaleEffect, OpacityEffect) ekleme.
* [ ] [VFX] Kombo Efektleri: Kombolar arttÄ±kÃ§a daha belirgin gÃ¶rsel efektler.
* [ ] [VFX] Blok YerleÅŸme Efekti: Blok yerine oturduÄŸunda kÃ¼Ã§Ã¼k bir gÃ¶rsel efekt.
* [ ] [SFX/BGM] Ses Efektleri: Blok hareketleri, dÃ¶nme, yerleÅŸme, patlama, kombo, oyun sonu, buton tÄ±klamalarÄ± iÃ§in ses efektleri ekleme (flame_audio paketi).
* [ ] [SFX/BGM] Arka Plan MÃ¼ziÄŸi: Oyun sÄ±rasÄ±nda Ã§alacak enerjik bir arka plan mÃ¼ziÄŸi ekleme (flame_audio).
âš¡ GÃ¼Ã§lendirmeler (Power-ups)
* [ ] [Feature] Enerji BarÄ± (UI ve MantÄ±k): GÃ¼Ã§lendirmeleri kazanmak iÃ§in gereken enerji barÄ±nÄ±n UI'Ä±nÄ± (FlameComponent veya Flutter Overlay) ve dolum mantÄ±ÄŸÄ±nÄ± (kombo/hÄ±zlÄ± patlatma ile) oluÅŸturma.
* [ ] [Feature] GÃ¼Ã§lendirme Aktivasyonu: Enerji barÄ± dolduÄŸunda rastgele (veya seÃ§ilebilir) bir gÃ¼Ã§lendirmenin aktifleÅŸmesi/kullanÄ±ma hazÄ±r hale gelmesi.
* [ ] [Feature] GÃ¼Ã§lendirme: Bomba: Dokunulan alandaki kareleri temizleyen bomba gÃ¼cÃ¼nÃ¼ uygulama.
* [ ] [Feature] GÃ¼Ã§lendirme: Renk Silici: Dokunulan renkteki tÃ¼m kareleri temizleyen gÃ¼cÃ¼ uygulama.
* [ ] [Feature] GÃ¼Ã§lendirme: Zaman Dondurucu: KÄ±sa sÃ¼reliÄŸine zamanÄ± ve blok dÃ¼ÅŸÃ¼ÅŸÃ¼nÃ¼ durduran gÃ¼cÃ¼ uygulama.
* [ ] [Feature] GÃ¼Ã§lendirme: Yer DeÄŸiÅŸtirici: DÃ¼ÅŸen blok ile sonraki bloÄŸu deÄŸiÅŸtirme gÃ¼cÃ¼nÃ¼ uygulama.
